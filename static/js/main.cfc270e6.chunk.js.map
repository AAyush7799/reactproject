{"version":3,"sources":["screens/root/index.js","screens/Basic/index.js","screens/Basic/components/main/index.js","screens/Basic/components/home/index.js","constants/index.js","reducers/auth.js","reducers/index.js","api/auth.js","sagas/auth.js","sagas/index.js","store.js","middleware/EnsureLoggedInContainer.js","router.js","index.js"],"names":["Root","className","id","this","props","children","React","Component","hot","module","Basic","BasicMain","updateWindowDimensions","bind","state","dimensions","width","window","innerWidth","height","innerHeight","addEventListener","setState","connect","auth","BasicPage","default_reducers","constants","type","reducers","sagas","genConsts","actions","name","generateConsts","i","j","initialState","success","loading","isLoggedIn","user","sessionToken","accountId","email","lastName","firstName","gender","birthday","combineReducers","routing","routerReducer","action","REHYDRATE","payload","login","error","data","message","reset","instance","axios","create","baseURL","headers","log_prefix","VERBOSE","messages","genericError","status","logger","verbose","console","Auth","values","log","Promise","resolve","post","then","response","catch","request","config","defaultCatch","put","call","location","href","alert","all","takeEvery","persistConfig","key","storage","timeout","whitelist","persistedReducers","persistReducer","middlewares","sagaMiddleware","createSagaMiddleware","push","routerMiddleware","browserHistory","middleware","applyMiddleware","store","createStore","undefined","persistor","persistStore","history","syncHistoryWithStore","run","rootSaga","EnsureLoggedInContainer","dispatch","redirectUrl","currentURL","replace","ownProps","pathname","configureStore","router","onUpdate","scrollTo","component","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfc270e6.chunk.js","sourcesContent":["import React from \"react\";\n// import {store} from \"Store\";\nimport {connect} from \"react-redux\";\nimport {push} from \"react-router-redux\";\nimport {hot} from \"react-hot-loader\";\n\n\n\nclass Root extends React.Component {\n\t// render\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"approot\" id=\"approot\">\n\t\t\t\t{this.props.children}\n\t\t\t\t<div className=\"root_main_classs\"/>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default hot(module)(Root);","// import Libraries\nimport React from \"react\";\n// app component\nimport BasicMain from \"./components/main/index\";\nimport {hot} from \"react-hot-loader\";\n\nclass Basic extends React.Component {\n  // render\n  render() {\n    return (\n      <div className=\"basic_main_cont\" id=\"basic_main_cont\">\n\t\t    <BasicMain/>\n      </div>\n    );\n  }\n}\nexport default hot(module)(Basic)\n","// import Libraries\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {hot} from \"react-hot-loader\";\n\nimport BasicPage from \"../home/index\";\nimport constants from \"../../../../constants\";\n\nclass BasicMain extends React.Component {\n  // render\n  constructor(props){\n    super(props);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.state = {\n        dimensions: {\n            width: window.innerWidth,\n            height: window.innerHeight\n        },\n    }\n  }\n  componentDidMount(){\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n  render(){\n    \n    return (\n      <div className=\"basic_main\">\n        <div className=\"basic_page_cont\">\n            <BasicPage\n                state={this.state}\n            />\n        </div>\n      </div>\n    );\n  }\n    updateWindowDimensions() {\n        this.setState({\n            ...this.state,\n            dimensions: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            }\n        });\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n      auth: state.auth,\n    }\n}\nexport default hot(module)(connect(mapStateToProps)(BasicMain))\n","// import Libraries\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {hot} from \"react-hot-loader\";\n\nimport \"./stylesheets/BasicPage.scss\";\n\n\nexport default class BasicPage extends React.Component {\n  \n  render() {\n    return (\n      <div className=\"basic_page fontMediumCustom\">\n            Hello\n      </div>\n    );\n  }\n}","// Generating All Constants for Sagas and Reducers.\n\nlet default_reducers = ['loading', 'success', 'error', \"save\", \"reset\", \"fetch_success\", \"fetch_error\", 'fetch', 'unload']\nlet default_reducer_prefix = \"REDUCERS\"\nlet default_saga_prefix = \"SAGAS\"\n\nfunction generateConsts(type) {\n\tswitch (type) {\n\t\tcase 'auth': return {\n\t\t\treducers: default_reducers,\n\t\t\tactions: ['login'],\n\t\t\tname: \"AUTH\"\n\t\t}\n\t\tcase 'home': return {\n\t\t\treducers: default_reducers,\n\t\t\tactions: ['newProject',],\n\t\t\tname: \"HOME\"\n\t\t}\n\t}\n}\nexport default function constants(type) {\n\tlet constants = {\n\t\treducers: {},\n\t\tsagas: {}\n\t};\n\tlet genConsts = generateConsts(type);\n\n\tfor (let i in genConsts.actions) {\n\t\tif (!constants.sagas[genConsts.actions[i]]) {\n\t\t\tconstants.sagas[genConsts.actions[i]] = {}\n\t\t}\n\t\tconstants.sagas[genConsts.actions[i]] = `${type}/${default_saga_prefix}/${genConsts.actions[i]}`;\n\t\tfor (let j in genConsts.reducers) {\n\t\t\tif (!constants.reducers[genConsts.actions[i]]) {\n\t\t\t\tconstants.reducers[genConsts.actions[i]] = {}\n\t\t\t}\n\t\t\tconstants.reducers[genConsts.actions[i]][genConsts.reducers[j]] = `${type}/${default_reducer_prefix}/${genConsts.actions[i]}/${genConsts.reducers[j]}`;\n\t\t}\n\t}\n    // console.log(\"constants Hello\" , constants)\n\treturn constants;\n}\n\n\n","import { REHYDRATE } from 'redux-persist';\nimport constants from '../constants';\n\nconst initialState = {\n\tsuccess: true,\n    loading: false,\n    isLoggedIn : false,\n\tuser: {\n\t\tsessionToken: null,\n\t\tid: null,\n        accountId: null,\n        email: null,\n        lastName: null,\n        firstName: null,\n        gender: null,\n        birthday: null\n\t}\n};\n\nexport default function auth(state = initialState, action) {\n    switch (action.type) {\n        case REHYDRATE:\n            if(!action.payload){\n                return {\n                    ...state,\n                }\n            }\n            return {\n                ...state,\n                user: action.payload.auth.user,\n                success: action.payload.auth.success,\n                loading: action.payload.auth.loading,\n                isLoggedIn : action.payload.auth.isLoggedIn,\n            };\n        case constants(\"auth\").reducers.login.loading:\n            return {\n                ...state,\n                loading : true,\n                isLoggedIn : false,\n            };\n        case constants(\"auth\").reducers.login.error:\n            return {\n                ...state,\n                loading : false,\n                success: false,\n                data:{\n                    message: action.payload.message\n                },\n                isLoggedIn : false,\n            };\n        case constants(\"auth\").reducers.login.success:\n            return {\n                ...state,\n                loading : false,\n                success: true,\n                isLoggedIn : true,\n                user: action.payload.data,\n            };\n        case constants(\"auth\").reducers.login.reset:\n            return {\n                ...state,\n                success: true,\n                loading: false,\n                isLoggedIn : false,\n                user: {\n                    sessionToken: null,\n                    id: null,\n                    accountId: null,\n                    email: null,\n                    lastName: null,\n                    firstName: null,\n                    gender: null,\n                    birthday: null\n                }\n            };\n        default:\n            return {...state};\n    }\n}","// import Libraries\nimport {combineReducers} from \"redux\";\nimport {routerReducer} from \"react-router-redux\";\n\nimport auth from './auth';\n\n// export global combined reducer\nexport const reducers = combineReducers ({\n        routing: routerReducer,\n        auth: auth,\n    })\n;\n","// import Libraries\nimport axios from 'axios';\n\nlet instance = axios.create({\n    baseURL: '',\n    headers: {'Content-Type': 'application/json'}\n});\n\nconst log_prefix = \"[API_AUTH_BORING]\"\n\nconst VERBOSE = true;\n\nconst messages = {\n\tstart: \"Starting request.\",\n\tend: \"End request.\",\n\tnon200x: \"The request was made and the server responded with a status code that falls out of the range of 2xx.\",\n\tnoResp: \"The request was made but no response was received.\",\n\tbadConfig: \"Something happened in setting up the request that triggered an Error.\",\n}\n\nconst genericError = {\n    message: \"Something Went Wrong\",\n    status: 500\n}\nfunction logger(message, verbose, type){\n\tif(verbose){\n        if(type === \"error\"){\n            message = `[ERROR] ${message}`;\n            type = \"info\"\n        }\n\t\tconsole[type](message);\n\t}\n}\nfunction defaultCatch(error,resolve){\n\tif (error.response) {\n\t\tlogger(`${log_prefix} ${messages.non200x}`,VERBOSE,\"error\");\n\t\tlogger(`${log_prefix} evaluating(error.response) ${error.response}`,VERBOSE,\"error\");\n\n        resolve(error.response)\n    }else if (error.request) {\n    \tlogger(`${log_prefix} ${messages.noResp}`,VERBOSE,\"error\");\n\t\tlogger(`${log_prefix} evaluating(http.ClientRequest) ${error.request}`,VERBOSE,\"error\");\n\n        resolve(genericError)\n    }else {\n        logger(`${log_prefix} ${messages.badConfig}`,VERBOSE,\"error\");\n\t\tlogger(`${log_prefix} evaluating(config) ${error.config}`,VERBOSE,\"error\");\n\t\tlogger(`${log_prefix} evaluating(axios.instance) ${instance}`,VERBOSE,\"error\");\n\n        resolve(genericError)\n    }\n}\n\nexport default class Auth {\n    static login(values) {\n        let payload = values;\n        console.log(\"payload==\", payload)\n        logger(`${log_prefix} ${messages.start} login`,VERBOSE,\"info\");\n        return new Promise(resolve => {\n            instance.post('users/v1/user/login', payload)\n                .then(function (response) {\n                    resolve(response)\n                })\n                .catch(function (error) {\n                    defaultCatch(error, resolve)\n                });\n        });\n    }\n}\n","import { call, put } from \"redux-saga/effects\";\nimport Auth from \"../api/auth\";\n\nimport constants from \"../constants\";\n\nexport function* login(action) {\n    console.log(\"INNN\")\n    yield put({\n        type: constants(\"auth\").reducers.login.loading\n    });\n    const response = yield call(Auth.login, action.payload);\n    if(response.status === 200){\n        yield put({\n            type: constants(\"auth\").reducers.login.success,\n            payload: response.data,\n        });\n        // Redirect To pages according to Type......\n        // return\n        window.location.href = \"/\";\n    }else{\n        alert(\"Wrong email and password combination\");\n        yield put({\n            type: constants(\"auth\").reducers.login.error,\n            payload: {\n                status: response.status,\n                message: \"We ran into some issues and are looking into it.\"\n            },\n        });\n        // alert(response.data.message);\n    }\n}\n","// import Libraries\nimport { fork, takeLatest, takeEvery, all } from \"redux-saga/effects\";\n\nimport { login } from \"./auth\";\n\nimport constants from \"../constants\";\n\n\n// main saga generators\nexport function* sagas(){\n    yield all([\n        yield takeEvery(constants(\"auth\").sagas.login, login),\n        \n    ]);\n}\n","import {createStore, applyMiddleware} from \"redux\";\nimport {browserHistory} from \"react-router\";\nimport {createLogger} from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\n\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nimport {syncHistoryWithStore, routerMiddleware} from \"react-router-redux\";\n\nimport storage from 'redux-persist/lib/storage';\n// import all Reducers\nimport {reducers} from \"./reducers\";\n\n// import all Sagas\nimport { sagas as rootSaga } from \"./sagas\";\nconst persistConfig = {\n  key: 'root',\n  storage,\n  timeout: 10000,\n  // blacklist: ['routing'],\n  whitelist : ['auth',],\n};\n\nconst initialState = {};\n\nconst persistedReducers = persistReducer(persistConfig, reducers);\n\n// define middlewares\nlet middlewares = [];\n\n// create and add the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\n\n// add the router middleware\nmiddlewares.push(routerMiddleware(browserHistory));\n\n//add the freeze and logger dev middleware\nif (process.env.NODE_ENV !== 'production') {\n    middlewares.push(createLogger());\n}\n\n// apply the middleware\nconst middleware = applyMiddleware(...middlewares);\n\n\n\nexport default () => {\n  const store = createStore(persistedReducers, undefined, middleware);\n  const persistor = persistStore(store);\n  const history = syncHistoryWithStore(browserHistory, store);\n  sagaMiddleware.run(rootSaga);\n  return { store, history, persistor }\n}","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {browserHistory} from 'react-router';\nimport { push } from 'react-router-redux'\n\nclass EnsureLoggedInContainer extends React.Component {\n  componentDidMount() {\n    const { dispatch, currentURL, redirectUrl, isLoggedIn } = this.props\n\n    if (!isLoggedIn) {\n      // set the current url/path for future redirection (we use a Redux action)\n      // then redirect (we use a React Router method)\n\n      dispatch(push(redirectUrl));\n      browserHistory.replace(redirectUrl)\n    }\n  }\n\n  render() {\n    const {isLoggedIn} = this.props;\n    if (isLoggedIn) {\n      // TODO: verify token from server, skipped in early development stage\n      return this.props.children\n    } else {\n      return null\n    }\n  }\n}\n\n// Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\nfunction mapStateToProps(state, ownProps) {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    currentURL: ownProps.location.pathname,\n    redirectUrl: \"/\"\n  }\n}\n\nexport default connect(mapStateToProps)(EnsureLoggedInContainer)","// import Libraries\nimport React from \"react\";\nimport {Router, Route} from \"react-router\";\n// import store and history\nimport configureStore from './store';\nimport EnsureLoggedInContainer from \"./middleware/EnsureLoggedInContainer\";\nimport {\n    Root,\n\tBasic,\n} from './screens'\nconst { store, history } = configureStore();\n// import Modules\n\n// build the router\nconst router = (\n\t<Router history={history} onUpdate={() => window.scrollTo(0, 0)}>\n\t\t<Route component={Root}>\n\t\t\t<Route path=\"/\" component={Basic}/>\n\t\t\t<Route path=\"/basic\" component={Basic}/>\n\t\t\t<Route component={EnsureLoggedInContainer}>\n\t\t</Route>\n\t\t</Route>\n\t</Router>\n);\n// export Router\nexport {router};\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport \"babel-polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport configureStore from './store';\nimport { router } from \"./router\";\n\nconst { store, persistor } = configureStore();\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t{router}\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById(\"my_app\")\n);"],"sourceRoot":""}